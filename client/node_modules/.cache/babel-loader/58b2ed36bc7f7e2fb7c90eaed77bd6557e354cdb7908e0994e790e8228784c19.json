{"ast":null,"code":"var _jsxFileName = \"/home/haris/Haris'/General/PCN/file-uploading-platform/src/Uploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport classNames from 'classnames';\nimport uploadImg from './assets/upload.png';\nimport { useDispatch } from 'react-redux';\nimport { pushFile } from './fileSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Uploader() {\n  _s();\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const handleDivClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const fileMetaData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      };\n      dispatch(pushFile(fileMetaData));\n\n      // store this file on the HDD\n\n      // optionally we can upload to server from here ...\n    }\n  };\n  const uploaderClasses = classNames('uploader-container', 'h-3/4', 'w-3/4', 'border-4', 'border-gray-400', 'rounded-3xl', 'shadow-xl', 'hover:bg-gray-200', 'transition', 'hover:cursor-pointer', 'flex', 'items-center', 'justify-center');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: uploaderClasses,\n    onClick: handleDivClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: uploadImg,\n      className: \"h-10 w-10\",\n      alt: \"upload-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Uploader, \"K1nAnLVJt867qthMeMj9CzVOVKo=\", false, function () {\n  return [useDispatch];\n});\n_c = Uploader;\nexport default Uploader;\nvar _c;\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"names":["React","useRef","classNames","uploadImg","useDispatch","pushFile","jsxDEV","_jsxDEV","Uploader","_s","fileInputRef","dispatch","handleDivClick","current","click","handleFileChange","e","file","target","files","fileMetaData","name","size","type","lastModified","uploaderClasses","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","onChange","_c","$RefreshReg$"],"sources":["/home/haris/Haris'/General/PCN/file-uploading-platform/src/Uploader.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport classNames from 'classnames';\nimport uploadImg from './assets/upload.png'\nimport { useDispatch } from 'react-redux';\nimport { pushFile } from './fileSlice';\n\nfunction Uploader() {\n    const fileInputRef = useRef(null)\n    const dispatch = useDispatch()\n\n    const handleDivClick = () => {\n        fileInputRef.current.click()\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0]\n\n        if (file) {\n            const fileMetaData = {\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                lastModified: file.lastModified\n            }\n\n            dispatch(pushFile(fileMetaData))\n\n            // store this file on the HDD\n            \n            \n            // optionally we can upload to server from here ...\n        }\n\n    }\n\n    const uploaderClasses = classNames(\n        'uploader-container',\n        'h-3/4',\n        'w-3/4',\n        'border-4',\n        'border-gray-400',\n        'rounded-3xl',\n        'shadow-xl',\n        'hover:bg-gray-200',\n        'transition',\n        'hover:cursor-pointer',\n        'flex',\n        'items-center',\n        'justify-center'\n    );\n\n    return (\n        <div className={uploaderClasses} onClick={handleDivClick}>\n            <img src={uploadImg} className='h-10 w-10' alt='upload-icon'></img>\n            <input\n                type='file'\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n        </div>\n    );\n}\n\nexport default Uploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE9B,IAAIF,IAAI,EAAE;MACN,MAAMG,YAAY,GAAG;QACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,IAAI,EAAEN,IAAI,CAACM,IAAI;QACfC,YAAY,EAAEP,IAAI,CAACO;MACvB,CAAC;MAEDb,QAAQ,CAACN,QAAQ,CAACe,YAAY,CAAC,CAAC;;MAEhC;;MAGA;IACJ;EAEJ,CAAC;EAED,MAAMK,eAAe,GAAGvB,UAAU,CAC9B,oBAAoB,EACpB,OAAO,EACP,OAAO,EACP,UAAU,EACV,iBAAiB,EACjB,aAAa,EACb,WAAW,EACX,mBAAmB,EACnB,YAAY,EACZ,sBAAsB,EACtB,MAAM,EACN,cAAc,EACd,gBACJ,CAAC;EAED,oBACIK,OAAA;IAAKmB,SAAS,EAAED,eAAgB;IAACE,OAAO,EAAEf,cAAe;IAAAgB,QAAA,gBACrDrB,OAAA;MAAKsB,GAAG,EAAE1B,SAAU;MAACuB,SAAS,EAAC,WAAW;MAACI,GAAG,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnE3B,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXY,GAAG,EAAEzB,YAAa;MAClB0B,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEvB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzB,EAAA,CAxDQD,QAAQ;EAAA,QAEIJ,WAAW;AAAA;AAAAmC,EAAA,GAFvB/B,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}